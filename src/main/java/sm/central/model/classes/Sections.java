package sm.central.model.classes;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import lombok.Data;

@Entity
@Data
public class Sections {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    private String name;
    
    // Set default capacity to 30, making it mutable with setter
    private Integer capacity = 30;

    @ManyToOne
    @JoinColumn(name = "class_id")
    private Class classes;

    // Default constructor
    public Sections() {
        this.capacity = 30; // Ensure default capacity is set
    }

    // Parameterized constructor with all fields
    public Sections(String name, Integer capacity, Class classes) {
        this.name = name;
        this.capacity = (capacity != null) ? capacity : 30; // Use provided capacity or default to 30
        this.classes = classes;
    }

    // Constructor without capacity (will use default)
    public Sections(String name, Class classes) {
        this.name = name;
        this.capacity = 30; // Default capacity
        this.classes = classes;
    }

    // Custom setter for capacity with validation
    public void setCapacity(Integer capacity) {
        if (capacity != null && capacity >= 0) {
            this.capacity = capacity;
        } else {
            this.capacity = 30; // Default to 30 if invalid capacity provided
        }
    }

    // Explicit getters and setters generated by Lombok @Data
    // but adding custom getter to show it's mutable
    public Integer getCapacity() {
        return capacity;
    }

    // Other getters/setters are handled by @Data
}